/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cn.proxys;

import cn.proxys.impl.CheckProxy;
import cn.proxys.utils.TextUtils;
import cn.proxys.utils.Threads;
import ff.jnezha.jnt.Jnt;
import ff.jnezha.jnt.cs.GithubHelper;

import java.util.concurrent.CopyOnWriteArrayList;

public class Main {


    private static volatile CopyOnWriteArrayList<String> proxys = new CopyOnWriteArrayList<String>();
    private static volatile StringBuilder sb = new StringBuilder();

    //https://raw.githubusercontent.com/parserpp/ip_ports/main/proxyinfo.txt
    //https://cdn.jsdelivr.net/gh/parserpp/ip_ports/proxyinfo.txt
    public static void main(String[] args) {

        String token = System.getenv("GITHUB_TOKEN");
        if (args.length > 0) {
            token = args[0];
        }
        getInfoFromUrl();
        for (int i = 0; i < proxys.size(); i++) {
            postToCheck(proxys.get(i));
        }
        Threads.waitForAsyncTask();

//        updateContent(String owner, String repo, String path, String token, String contentWillBase64, String commitMsg) {
        GithubHelper.updateContent("parserpp", "ip_ports", "/proxyinfo.txt", token, sb.toString(), "UPDATE FOR ALIVE");
    }

    private static void postToCheck(final String proxy) {
        String[] s = proxy.split(":");
        final String ip = s[0];
        final int port = Integer.valueOf(s[1]);
        Threads.sumbit(new Runnable() {
            @Override
            public void run() {

                if (CheckProxy.isConnnectedIpA(ip, port) || CheckProxy.isConnnectedIpB(ip, port) || CheckProxy.isConnnectedIpC(ip, port) || CheckProxy.isConnnectedByBaidu(ip, port) || CheckProxy.isConnnectedByWandoujia(ip, port)) {
                    addAliveIp(ip, port);
                }
            }
        });
    }

    private static void addAliveIp(String ip, int port) {
        sb.append(ip).append(":").append(port).append("\n");
    }


    private static void getInfoFromUrl() {
        String s1 = "https://raw.githubusercontent.com/parserpp/ip_ports/main/proxyinfo.txt";
        String s2 = "https://cdn.jsdelivr.net/gh/parserpp/ip_ports/proxyinfo.txt";
        String body = Jnt.get(s1);
        if (TextUtils.isEmpty(body)) {
            body = Jnt.get(s2);
        }
        System.out.println(body);
        if (body.contains("\n")) {

            String[] ss = body.split("\n");
            System.out.println("包含\n---->" + ss.length);
            if (ss != null) {
                for (String ww : ss) {
                    addResult(ww);
                }
            }
        }

    }

    public static synchronized void addResult(String ip, int port) {
        addResult(ip + ":" + port);
    }

    public static synchronized void addResult(String ip, String port) {
        addResult(ip + ":" + port);
    }

    public static void addResult(String proxy) {
        if (!proxys.contains(proxy)) {
            proxys.add(proxy);
        }
    }


}

